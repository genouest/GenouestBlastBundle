{#
/*
 * Copyright 2011 Anthony Bretaudeau <abretaud@irisa.fr>
 *
 * Licensed under the CeCILL License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 */
#}

{% autoescape false %}
{% spaceless %}

{# Prepare db path #}
{% if request.hasPersoDb %}
    {% set dbPath = workDir ~ 'uploadedDB' %}
    {% set makeDb %}
        {{- "" }}makeblastdb -in {{ workDir }}uploadedDB.fasta -dbtype {{ request.program in ['blastp', 'blastx'] ? 'prot' : 'nucl' }} -out {{ workDir }}uploadedDB -title uploadedDB;
    {% endset %}
{% else %}
    {% set dbPath = request.dbPath %}
    {% set makeDb = '' %}
{% endif %}

{# Prepare blast command #}
{% set blastCommand %}
    {%- spaceless %}
        {%- if request.program == 'blastp' and request.blastpType in ['psiblast', 'phiblast'] %}
            {{- "" }} psiblast
        {%- elseif request.program == 'blastp' and request.blastpType == 'deltablast' %}
            {{- "" }} deltablast
        {%- else %}
            {{- request.program }}{{ request.program == 'blastn' ? ' -task ' ~ request.blastnType : '' }}{{ request.program == 'blastp' ? ' -task ' ~ request.blastpType : '' }}
        {%- endif %}

        {%- if request.fileSeq or request.pastedSeq %}
            {{- "" }} -query {{ workDir }}input.fasta
        {%- endif %}

        {{- "" }} -db {{ dbPath }} -evalue {{ request.expect }} -max_target_seqs {{ request.maxTargetSequences }} -soft_masking {{ request.softMasking ? 'true' : 'false' }}

        {%- if request.lowerCase %}
            {{- "" }} -lcase_masking
        {%- endif %}

        {%- if request.program == 'blastn' and request.blastnType == 'megablast' %}
            {{- "" }} -word_size {{ request.wordSizesMegablast }}
        {%- elseif request.program == 'blastn' and request.blastnType == 'dc-megablast' %}
            {{- "" }} -word_size {{ request.wordSizesDcMegablast }}
        {%- elseif request.program == 'blastn' %}
            {{- "" }} -word_size {{ request.wordSizesBlastn }}
        {%- else %}
            {{- "" }} -word_size {{ request.wordSizesProt }}
        {%- endif %}

        {%- if request.program == 'blastn' and request.blastnType == 'dc-megablast' and request.templateLengths != 0 %}
            {{- "" }} -template_length {{ request.templateLengths }} -template_type {{ request.templateTypes }}
        {%- endif %}

        {%- if request.program == 'tblastx' or request.program == 'blastx' %}
            {{- "" }} -query_gencode {{ request.queryCode }}
        {%- endif %}

        {%- if request.program == 'tblastx' or request.program == 'tblastn' %}
            {{- "" }} -db_gencode {{ request.dbCode }}
        {%- endif %}

        {%- if request.program == 'blastn' %}
            {%- if request.blastnType == 'megablast' %}
                {%- set nucMatrix = request.matricesMegablast|split(',') %}
            {%- else %}
                {%- set nucMatrix = request.matricesNuc|split(',') %}
            {%- endif %}
            {{- "" }} -reward {{ nucMatrix[0] }} -penalty {{ nucMatrix[1] }}
        {%- else %}
            {{- "" }} -matrix {{ request.matricesProt }}
        {%- endif %}

        {%- if request.program != 'tblastx' %}
            {%- if request.program == 'blastn' %}
                {%- set gaps = request.gapCostsBlastn|split(',') %}
            {%- elseif request.program != 'tblastx' %}
                {%- set gaps = request.gapCostsProt|split(',') %}
            {%- endif %}
            {{- "" }} -gapopen {{ gaps[0] }} -gapextend {{ gaps[1] }}
        {%- endif %}

        {%- if (request.program == 'blastp' and request.blastpType != 'deltablast') or request.program == 'tblastn' %}
            {{- "" }} -comp_based_stats {{ request.compositionalAdjustments }}
        {%- elseif request.program == 'blastp' and request.blastpType == 'deltablast' %}
            {{- "" }} -comp_based_stats {{ request.compositionalAdjustmentsDelta }}
        {%- endif %}

        {%- if request.program == 'blastn' %}
            {{- "" }} -dust {{ request.lowComplex ? 'yes' : 'no' }}
        {%- else %}
            {{- "" }} -seg {{ request.lowComplex ? 'yes' : 'no' }}
        {%- endif %}

        {#- PSI/PHI/DELTA-BLAST parameters #}
        {%- if request.program == 'blastp' and (request.blastpType == 'psiblast' or request.blastpType == 'phiblast' or request.blastpType == 'deltablast') %}
            {{- "" }} -inclusion_ethresh {{ request.psiThreshold }} -num_iterations {{ request.psiIterationNb }} -pseudocount {{ request.psiPseudoCount }}
            {%- if request.blastpType == 'psiblast' or request.blastpType == 'deltablast' %}
                {{- "" }} -out_pssm {{ workDir }}{{ job.jobuid }}.pssm -out_ascii_pssm {{ workDir }}{{ job.jobuid }}.pssm.ascii
            {%- endif %}

            {%- if request.blastpType == 'psiblast' and request.psiPSSM %}
                {{- "" }} -in_pssm {{ workDir }}input.pssm
            {%- endif %}

            {%- if request.blastpType == 'phiblast' and request.phiPattern %}
                 {{- "" }} -phi_pattern {{ workDir }}input.pattern
            {%- endif %}

            {%- if request.blastpType == 'deltablast' %}
                 {{- "" }} -rpsdb {{ cdd_delta }}
            {%- endif %}
        {%- endif %}

        {{- "" }} -num_threads 4

        {%- if request.program == 'blastp' and request.blastpType == 'phiblast' %}
            {{- "" }} -outfmt 0 -html -out {{ workDir }}{{ job.jobuid }}.html;
        {%- else %}
            {{- "" }} -outfmt 11 -out {{ workDir }}{{ job.jobuid }}.asn;
        {%- endif %}
    {%- endspaceless %}
{%- endset %}


{{pre_command}}


echo "{{ blastCommand }}" > {{ workDir }}blast_command.txt;

{% if makeDb %}
    {{- makeDb }}
{%- endif %}

{{ blastCommand }}

{# Reformat the blast output in txt, xml, html ... #}
{%- if request.program != 'blastp' or (request.blastpType != 'phiblast') %}
blast_formatter -archive {{ workDir }}{{ job.jobuid }}.asn -outfmt 5 -out {{ workDir }}{{ job.jobuid }}.xml;
blast_formatter -archive {{ workDir }}{{ job.jobuid }}.asn -outfmt 0 -html -out {{ workDir }}{{ job.jobuid }}.html;
blast_formatter -archive {{ workDir }}{{ job.jobuid }}.asn -outfmt 0 -out {{ workDir }}{{ job.jobuid }}.txt;
blast_formatter -archive {{ workDir }}{{ job.jobuid }}.asn -outfmt 6 -out {{ workDir }}{{ job.jobuid }}.tsv;
blast_formatter -archive {{ workDir }}{{ job.jobuid }}.asn -outfmt 10 -out {{ workDir }}{{ job.jobuid }}.csv;
{%- endif %}

{%- endspaceless %}
{% endautoescape %}
